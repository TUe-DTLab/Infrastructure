"""Add user created and updated fields

Revision ID: 408170442304
Revises: 04d620da0234
Create Date: 2023-11-15 13:43:42.263209

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa
import sqlalchemy_file

from alembic import op

# revision identifiers, used by Alembic.
revision = "408170442304"
down_revision = "04d620da0234"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("roles_model_model_id_fkey", "roles_model", type_="foreignkey")
    op.drop_constraint("roles_model_user_id_fkey", "roles_model", type_="foreignkey")
    op.create_foreign_key(None, "roles_model", "models", ["model_id"], ["id"])
    op.create_foreign_key(None, "roles_model", "user", ["user_id"], ["id"])
    op.drop_constraint("roles_project_project_id_fkey", "roles_project", type_="foreignkey")
    op.drop_constraint("roles_project_user_id_fkey", "roles_project", type_="foreignkey")
    op.create_foreign_key(None, "roles_project", "projects", ["project_id"], ["id"])
    op.create_foreign_key(None, "roles_project", "user", ["user_id"], ["id"])
    op.add_column("user", sa.Column("created_at", sa.DateTime(), nullable=True))
    op.add_column("user", sa.Column("updated_at", sa.DateTime(), nullable=True))
    op.execute('UPDATE "user" SET created_at = NOW()')
    op.execute('UPDATE "user" SET updated_at = NOW()')
    op.alter_column("user", "created_at", nullable=False)
    op.alter_column("user", "updated_at", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("user", "updated_at")
    op.drop_column("user", "created_at")
    op.drop_constraint(None, "roles_project", type_="foreignkey")
    op.drop_constraint(None, "roles_project", type_="foreignkey")
    op.create_foreign_key(
        "roles_project_user_id_fkey", "roles_project", "user", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.create_foreign_key(
        "roles_project_project_id_fkey", "roles_project", "projects", ["project_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_constraint(None, "roles_model", type_="foreignkey")
    op.drop_constraint(None, "roles_model", type_="foreignkey")
    op.create_foreign_key("roles_model_user_id_fkey", "roles_model", "user", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        "roles_model_model_id_fkey", "roles_model", "models", ["model_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###
